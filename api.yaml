openapi: 3.0.0
info:
  description: This is a sample pizza delivery server.
  version: 1.0.0
  title: Pizza Delivery
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: restaurants
    description: Find your special pizza place
  - name: orders
    description: Make them deliver
paths:
  /restaurants:
    get:
      tags:
        - restaurants
      description: Returns all restaurants
      operationId: getAllRestaurants
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestaurantsResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/RestaurantsResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /restaurants/{restaurantId}:
    get:
      tags:
        - restaurants
      summary: Find restaurant by id
      description: Returns a single restaurant
      operationId: getRestaurantById
      parameters:
        - name: restaurantId
          in: path
          description: Id of restautant to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestaurantResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/RestaurantResponse"
        "400":
          description: Invalid id value (not a number)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Restaurant not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /restaurants/{restaurantId}/menu:
    get:
      tags:
        - restaurants
      summary: Check out restaurant's menu
      description: Returns restaurant's menu items with brief description of each position
      operationId: getRestaurantMenu
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: restaurantId
          in: path
          description: ID of restautant to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/MenuResponse"
        "400":
          description: Invalid id value (not a number)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Restaurant not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /restaurants/{restaurantId}/menu/{itemId}:
    get:
      tags:
        - restaurants
      summary: All about that pizza
      description: Returns description of menu item by id
      operationId: getMenuItemDescription
      parameters:
        - name: restaurantId
          in: path
          description: ID of restautant to return
          required: true
          schema:
            type: integer
            format: int64
        - name: itemId
          in: path
          description: Menu item id to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuItemDescriptionResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/MenuItemDescriptionResponse"
        "400":
          description: Invalid id value (not a number)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Restaurant or menu item not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /orders:
    post:
      tags:
        - orders
      summary: Place an order - get your pizza right away!
      description: Place an order
      operationId: placeOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
          application/xml:
            schema:
              $ref: "#/components/schemas/Order"
        description: Order placed for delivery
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/OrderResponse"
        "400":
          description: Invalid order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /orders/{orderId}:
    get:
      tags:
        - orders
      summary: Track order by id
      description: Get all info about that hot special pizza made for you
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: Order id to track the delivery
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/OrderResponse"
        "400":
          description: Invalid id value (not a number)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      tags:
        - orders
      summary: Update order status by id
      description: For valid response use "placed", "on_the_way", "delivered" or
        "cancelled" status
      operationId: updateOrderStatus
      parameters:
        - name: orderId
          in: path
          description: Id of the order to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StatusUpdateBody"
          application/xml:
            schema:
              $ref: "#/components/schemas/StatusUpdateBody"
        description: New order status
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/OrderResponse"
        "400":
          description: Invalid id or status value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://pizzadelivery.swagger.io/v2
  - url: http://pizzadelivery.swagger.io/v2
components:
  schemas:
    Order:
      type: object
      required:
        - id
        - restaurantId
        - items
        - delivery
        - status
      properties:
        id:
          type: integer
          format: int64
        restaurantId:
          type: integer
          format: int64
        items:
          items:
            $ref: "#/components/schemas/OrderItem"
          type: array
        delivery:
          $ref: "#/components/schemas/Delivery"
        status:
          type: string
          description: Order Status
          enum:
            - placed
            - cancelled
            - on_the_way
            - delivered
      xml:
        name: Order
    OrderItem:
      type: object
      required:
        - id
        - name
        - quantity
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Pepperoni pizza
        quantity:
          type: integer
          format: int32
      xml:
        name: OrderItem
    Delivery:
      type: object
      required:
        - deliveryDate
        - address
      properties:
        deliveryDate:
          type: string
          format: date-time
          example: 2020-11-21T17:32:28Z
        address:
          type: string
        recipientName:
          type: string
      xml:
        name: Delivery
    OrderResponse:
      properties:
        result:
          $ref: "#/components/schemas/Order"
      xml:
        name: OrderResponse
    Restaurant:
      type: object
      required:
        - restaurantId
        - name
        - address
      properties:
        restaurantId:
          type: integer
          format: int64
        name:
          type: string
        address:
          type: string
        phoneNumber:
          type: string
        workingHours:
          type: string
          default: 24/7
      xml:
        name: Restaurant
    RestaurantResponse:
      properties:
        result:
          $ref: "#/components/schemas/Restaurant"
      xml:
        name: RestaurantResponse
    RestaurantsResponse:
      properties:
        result:
          type: array
          items:
            $ref: "#/components/schemas/Restaurant"
        pagination:
          $ref: "#/components/schemas/Pagination"
      xml:
        name: RestaurantsResponse
    MenuResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: "#/components/schemas/MenuItem"
        pagination:
          type: array
          items:
            $ref: "#/components/schemas/Pagination"
      xml:
        name: MenuResponse
    MenuItem:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        weight:
          type: integer
          format: int32
        briefDescription:
          type: string
      xml:
        name: MenuItem
    MenuItemDescription:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        weight:
          type: integer
          format: int32
        fullDescription:
          type: string
      xml:
        name: MenuItemDescription
    MenuItemDescriptionResponse:
      properties:
        result:
          $ref: "#/components/schemas/MenuItemDescription"
      xml:
        name: MenuItemDescriptionResponse
    ErrorResponse:
      required:
        - code
        - message
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"
      xml:
        name: Error
    Pagination:
      properties:
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
    Error:
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    StatusUpdateBody:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - placed
            - cancelled
            - on_the_way
            - delivered
      xml:
        name: StatusUpdateBody